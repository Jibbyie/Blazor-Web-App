@page "/details/{AnimeId}"
@using System.Net;

<AnimeCard Image="@AnimeInfo.Image">
    <Header>
        <MudText Typo="Typo.h3">@AnimeInfo.Title</MudText>
    </Header>
    <Content>
        <MudText Typo="Typo.h5" Class="mb-2">@($"Type: {AnimeInfo.Type}")</MudText>
            <MudText Typo="Typo.h5">
                @($"Plot Summary: {AnimeInfo.Description}")
        </MudText>
        <MudText Typo="Typo.h5" Class="mb-2">@($"Genres: {string.Join(", ", AnimeInfo.Genres ?? Enumerable.Empty<string>())}")</MudText>
            <MudText Typo="Typo.h5" Class="mb-2">@($"Released: {AnimeInfo.ReleaseDate}")</MudText>
            <MudText Typo="Typo.h5" Class="mb-2">@($"Status: {AnimeInfo.Status}")</MudText>
        </Content>
    </AnimeCard>


@code {
    [Parameter]
    public string AnimeId { get; set; } = null!;

    protected AnimeDetails AnimeInfo { get; set; } = new();

    [Inject]
    protected IGogoAnimeClient Client { get; set; } = null!;

    [Inject]
    protected ISnackbar Snackbar { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        var (statusCode, info) = await Client.GetAnimeDetails(AnimeId);

        if (statusCode != HttpStatusCode.OK)
            Snackbar.Add(statusCode.ToString(), Severity.Error);
        else
            AnimeInfo = info!;
    }
}
